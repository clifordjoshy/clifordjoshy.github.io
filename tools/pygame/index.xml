<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>pygame - tool - Portfolio</title><link>http://cliford.net/tools/pygame/</link><description>pygame - tool - Portfolio</description><generator>Hugo -- gohugo.io</generator><language>en-in</language><managingEditor>reach@cliford.net (Cliford)</managingEditor><webMaster>reach@cliford.net (Cliford)</webMaster><lastBuildDate>Wed, 09 Dec 2020 17:40:49 +0530</lastBuildDate><atom:link href="http://cliford.net/tools/pygame/" rel="self" type="application/rss+xml"/><item><title>Minimax Chess Bot and GUI</title><link>http://cliford.net/projects/chess-bot/</link><pubDate>Wed, 09 Dec 2020 17:40:49 +0530</pubDate><author>Cliford</author><guid>http://cliford.net/projects/chess-bot/</guid><description><![CDATA[Links <i class="fa-icon fa-brands fa-github" aria-hidden="true"></i>&nbsp;GitHub - Python Versionâ€ƒ<i class="fa-icon fa-brands fa-github" aria-hidden="true"></i>&nbsp;GitHub - C++ Version
About This is my implementation of a single-player chess game using the minimax algorithm (which is an algorithm that can be used to generate optimal solutions for a zero-sum two player game) with alpha-beta pruning. A GUI was also written to make use of the bot and provide a single-player chess game experience.
There were two separate implementations that I did.]]></description></item></channel></rss>