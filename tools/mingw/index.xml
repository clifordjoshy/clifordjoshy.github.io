<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>mingw - tool - clifpage</title><link>http://cliford.net/tools/mingw/</link><description>mingw - tool - clifpage</description><generator>Hugo -- gohugo.io</generator><language>en-in</language><managingEditor>reach@cliford.net (Cliford)</managingEditor><webMaster>reach@cliford.net (Cliford)</webMaster><lastBuildDate>Fri, 01 Oct 2021 17:50:33 +0530</lastBuildDate><atom:link href="http://cliford.net/tools/mingw/" rel="self" type="application/rss+xml"/><item><title>Rubiks Cube Solver</title><link>http://cliford.net/projects/rubiks-cube-solver/</link><pubDate>Fri, 01 Oct 2021 17:50:33 +0530</pubDate><author>Cliford</author><guid>http://cliford.net/projects/rubiks-cube-solver/</guid><description><![CDATA[Links <i class="fa-icon fa-brands fa-github" aria-hidden="true"></i> GitHub <i class="fa-icon fa-solid fa-book" aria-hidden="true"></i> Thisthlethwaite Algorithm Reference
About My implementation of a Rubik&rsquo;s cube solver using the Thisthlethwaite algorithm. A solution can be found for any shuffled state in 45 moves or less.
The algorithm works by splitting the solving into various stages such that
each stage only uses a subset of the possible moves moves used in a stage will not be needed in any subsequent stages With the above restrictions, an iterative deepening depth-first search is conducted on the state space until a solution is obtained.]]></description></item><item><title>Minimax Chess Bot and GUI</title><link>http://cliford.net/projects/chess-bot/</link><pubDate>Wed, 09 Dec 2020 17:40:49 +0530</pubDate><author>Cliford</author><guid>http://cliford.net/projects/chess-bot/</guid><description>Links &lt;i class="fa-icon fa-brands fa-github" aria-hidden="true">&lt;/i> GitHub - Python Version &lt;i class="fa-icon fa-brands fa-github" aria-hidden="true">&lt;/i> GitHub - C++ Version
About This is my implementation of a single-player chess game using the minimax algorithm (which is an algorithm that can be used to generate optimal solutions for a zero-sum two player game) with alpha-beta pruning. A GUI was also written to make use of the bot and provide a single-player chess game experience.
There were two separate implementations that I did.</description></item></channel></rss>